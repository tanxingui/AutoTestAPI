{"name": "test_borDer[inBody0-exData0]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_cases.test_order.Test_Border object at 0x000001B9EE29FF60>\ninBody = \"{'client': 2, 'company': '营', 'credit_code': '1234758691472583', 'name': '委托人人', 'model_id': 34368, 'body_color': '花落...ty_id': 123, 'region': 1, 'invoice_type': 2, 'insurance_type': 1, 'balance_type': 1, 'identity': '', 'province_id': 9}\"\nexData = [10.2]\n\n    @pytest.mark.parametrize('inBody,exData',get_excel_data(excelDir,'B端订单','Border',*configData))\n    def test_borDer(self,inBody,exData):\n        inBody = str(inBody)\n        res = Add_b(inBody).add_b()\n        #用jsonpath去获取errcode的值\n        res = jsonpath.jsonpath(res, '$.errcode')\n        exData = jsonpath.jsonpath(exData,'$.errcode')\n>       self.define_api_assert(res,'=',exData)\n\ntest_order.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\commcon\\baseApi.py:60: in define_api_assert\n    raise error  # 抛出异常---不影响pytest 运行结果！\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'test_cases.test_order.Test_Border'>, result = [102]\ncondition = '=', exp_result = [10.2]\n\n    @classmethod  # 类方法\n    def define_api_assert(cls, result, condition, exp_result):\n        print(result)\n        print(exp_result)\n        try:\n            if condition == '=':\n>               assert result == exp_result\nE               AssertionError\n\n..\\commcon\\baseApi.py:52: AssertionError"}, "attachments": [{"name": "log", "source": "c339a954-af7c-4f98-b3df-f2732b9627bb-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "inBody", "value": "{'client': 2, 'company': '营', 'credit_code': '1234758691472583', 'name': '委托人人', 'model_id': 34368, 'body_color': '花落谁家的颜色', 'inner_color': '和及规划局', 'deposit_price': 500000, 'number': '1', 'buyer_user_id': 46690, 'guide_price': 1000099, 'price': 8888899, 'balance_price': 8388899, 'remark': '1\\n2\\n3yg', 'city_id': 123, 'region': 1, 'invoice_type': 2, 'insurance_type': 1, 'balance_type': 1, 'identity': '', 'province_id': 9}"}, {"name": "exData", "value": "{'errcode': 10.2, 'msg': '是否整版订单传参错误'}"}], "start": 1646727767193, "stop": 1646727767707, "uuid": "6d0a976e-4ec9-40a0-8660-4e3e2fa4a43d", "historyId": "a16c64d437073d5de52aa91399a6c1b9", "testCaseId": "ca756d4dd0e2bbe5a198de75c0a4636f", "fullName": "test_cases.test_order.Test_Border#test_borDer", "labels": [{"name": "tag", "value": "Border"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "Test_Border"}, {"name": "host", "value": "LAPTOP-M2VNAKFM"}, {"name": "thread", "value": "20564-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_order"}]}